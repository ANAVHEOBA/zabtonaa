datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Theme {
  id         Int          @id @default(autoincrement())
  userId     Int
  contents   String?
  imagePath  String?
  type       Int          @default(1)
  deadline   String
  Answer     Answer[]
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  Validation Validation[]
}

model Answer {
  id          Int          @id @default(autoincrement())
  userId      Int
  themeId     Int
  contents    String
  place       Int?
  hasReceived Boolean      @default(false)
  hasMinted   Boolean      @default(false)
  theme       Theme        @relation(fields: [themeId], references: [id], onDelete: Cascade)
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  Validation  Validation[]
}

model User {
  id            Int            @id @default(autoincrement())
  address       String         @unique
  nickname      String
  birthday      String
  level         Int            @default(0)
  exp           Int            @default(0)
  themeLeft     Int            @default(1)
  themeLimit    Int            @default(1)
  answerLeft    Int            @default(2)
  answerLimit   Int            @default(2)
  validateLeft  Int            @default(6)
  validateLimit Int            @default(6)
  Theme         Theme[]
  Answer        Answer[]
  Notification  Notification[]
  Validation    Validation[]
  zbtnDetail    zbtnDetail[]
}

model Validation {
  id       Int    @id @unique @default(autoincrement())
  userId   Int
  themeId  Int
  answerId Int
  theme    Theme  @relation(fields: [themeId], references: [id], onDelete: Cascade)
  answer   Answer @relation(fields: [answerId], references: [id], onDelete: Cascade)
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Notification {
  id        Int    @id @default(autoincrement())
  userId    Int
  contents  String
  timestamp Int
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model zbtnDetail {
  id        Int    @id @default(autoincrement())
  userId    Int
  contents  String
  amount    Int
  timestamp Int
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
